#############################################################################
# Makefile for building vhv
# Generated by tmake at 14:19, 2003/06/11
#     Project: vhv
#    Template: app
#############################################################################

####### Compiler, tools and options
#QTDIR   =       /usr/lib/qt-3.0.5
QTDIR   =       /usr/lib/qt-3.3
#QTDIR 	=	/usr/local/qt-x11-free-3.3.5

CC	=	gcc
CXX	=	g++
CFLAGS	=	-O3 -ggdb -pipe -D_REENTRANT -DQT_THREAD_SUPPORT -DUNIX
CXXFLAGS=	-O3 -ggdb -pipe -D_REENTRANT -DQT_THREAD_SUPPORT -DUNIX
VEGASFLAGS      = -D_OAWG -D__STDC_LIMIT_MACROS -D__STDC_CONSTANT_MACROS
#CFLAGS	=	-pipe -D_REENTRANT -DQT_THREAD_SUPPORT -DNO_DEBUG
#CXXFLAGS=	-pipe -D_REENTRANT -DQT_THREAD_SUPPORT -DNO_DEBUG
INCPATH	=	-I./include \
		-I$(QTDIR)/include \
		-I. \
		-I/usr/local/include/VDB \
		-I/usr/include/mysql \
		-I/usr/local/include/omniORB \
		-I/usr/local/include/omniORB4 \
		-I/usr/local/include/zthread \
		-I/usr/local/veritas/src/vegas-2.2.0/common/include \
		-I/usr/local/root/include
LINK	=	g++
LFLAGS	=	
MOC	=	$(QTDIR)/bin/moc
UIC	=	$(QTDIR)/bin/uic
RM	      = /bin/rm

TAR	=	tar -cf
GZIP	=	gzip -9f

####### CORBA 
OMNIBIN	      =/usr/local/bin
IDL           = $(OMNIBIN)/omniidl
#DEFS = `omni-config --cflags` 
DEFS = -D_REENTRANT -D__OMNIORB4__ -D__x86__ -D__linux__ -D__OSVERSION__=2 -D_REENTANT 

TC_HOME   = $(CURDIR)
TC_COMMON = $(TC_HOME)/common
TC_INC    = $(TC_HOME)/include
TC_SRC    = $(TC_HOME)/src
VPATH     = $(TC_HOME):$(TC_INC):$(TC_SRC):$(TC_COMMON)

####### Libraries
LIBS	=	$(SUBLIBS) \
		-L$(QTDIR)/lib \
		-L./lib \
		-L/usr/local/veritas/lib \
		-L/usr/lib/mysql/ \
		-L/usr/local/ZThread/lib \
		-L/usr/local/veritas/src/vegas-2.2.0/common/lib \
		-L/usr/local/veritas/root/lib \
		-lpthread \
		-lqt-mt \
		-lm \
		-lZThread \
		-lVDB \
		-lmysqlclient_r \
		-lcrypt \
		-lnsl \
		-lssl \
		-lcrypto \
		-L/usr/local/lib -lomniORB4 -lomnithread -lomniDynamic4 \
		-lomniDynamic4 
#		-lSP24common \
#		-lSP24sharedLite \
#		`root-config --libs`
#		-lcaenhvwrapper \
#		-lhscaenet \
#		-lcaenhvwrap \
#		-lsy1527 \
# 		-lXext \
# 		-lX11 \
#		-L/usr/X11R6/lib \

####### Files

HEADERS =	include/VHV.h \
		include/VHVControl.h \
		include/VHVData.h \
		include/VHVFrame.h \
		include/VStar.h \
		include/astrometry.h \
		include/VNETClientThread.h \
		include/exception.h \
		include/VNETClientThread.h \
		include/VHelpWindow.h \
		include/VASlalib.h \
		include/VASlamac.h
#		include/VHVSystem.h \
#		include/CAENHVWrapper.h \
#		include/Vcorba.h \
#		include/VReadConfig.h \
#		include/tclienthandler.h \
#		include/tdevicedata.h \
#		include/txmlclient.h \
#		VHVArrayServer.h \
#		include/VHVArrayFunctions.h \
#		include/sy1527oslib.h \
#		include/sy1527user.h \
#		include/caenhvoslib.h \
#		include/VNETFunctionsServer.h \
#		include/VNETFunctionsServerThread.h \

SOURCES =	src/VHVControl.cpp \
		src/VHVData.cpp \
		src/VHVFrame.cpp \
		src/VStar.cpp \
		src/astrometry.cpp \
		src/VNETClient.cpp \
		src/VNETClientThread.cpp \
		src/VNETClientThread.cpp \
		src/VHelpWindow.cpp \
		src/main.cpp \
		src/VASlalib.cpp
#		src/VHVSystem.cpp \
#		src/VReadConfig.cpp \
#		src/tclienthandler.cpp \
#		src/tdevicedata.cpp \
#		src/txmlclient.cpp \
#		src/VHVArrayFunctions.cpp \
#		src/VHVArrayServer.cpp \
#		src/VHVArrayClient.cpp \
#		src/VNETFunctionsServer.cpp \
#		src/VNETFunctionsServerThread.cpp \
#		src/VNETServer.cpp \

OBJECTS =	tmp/VNETFunctionsSK.o \
		tmp/VHVFrame.o \
		tmp/VHVControl.o \
		tmp/VHVData.o \
		tmp/VStar.o \
		tmp/astrometry.o \
		tmp/VNETClientThread.o \
		tmp/VHelpWindow.o \
		tmp/main.o \
		tmp/VASlalib.o
#		tmp/VHVSystem.o \
#		tmp/VReadConfig.o \
#		tmp/tclienthandler.o \
#		tmp/tdevicedata.o \
#		tmp/txmlclient.o \
#		tmp/VHVArrayServerSK.o \
#		tmp/VHVArrayServer.o \
#		tmp/VHVArrayFunctions.o \
#		tmp/VNETClientThread.o \
#		Vcorba.o \
#		exception.o \
#		tmp/VHVArrayClient.o \
#		tmp/VNETFunctionsServer.o \
#		tmp/VNETFunctionsServerThread.o \

INTERFACES =	
UICDECLS =	
UICIMPLS =	
SRCMOC	=	tmp/moc_VHVControl.cpp \
		tmp/moc_VHVFrame.cpp \
		tmp/moc_VHVData.cpp \
		tmp/moc_VHelpWindow.cpp \
		tmp/moc_VNETClientThread.cpp
#		tmp/moc_tdevicedata.cpp \
#		tmp/moc_txmlclient.cpp \
#		tmp/moc_VNETFunctionsServerThread.cpp \
#		tmp/moc_VHVArrayServer.cpp \

OBJMOC	=	tmp/moc_VHVControl.o \
		tmp/moc_VHVFrame.o \
		tmp/moc_VHVData.o \
		tmp/moc_VHelpWindow.o \
		tmp/moc_VNETClientThread.o
#		tmp/moc_tdevicedata.o \
#		tmp/moc_txmlclient.o \
#		tmp/moc_VHVArrayServer.o \
#		tmp/moc_VNETFunctionsServerThread.o \

DIST	=	
TARGET	=	hvac 
INTERFACE_DECL_PATH = .

LIBSRCS = VNETFunctionsServer.cpp \
	  VNETFunctionsServerThread.cpp \
	  VNETClientThread.cpp \
	  VReadConfig.cpp

LIBBASE = $(basename $(LIBSRCS))
LIBOBJS = $(addsuffix .o,$(LIBBASE))

CORBAOBJS = VNETFunctionsSK.o

EXECSRCS = VNETClient.cpp \
	   VNETServer.cpp

BINARIES = VNETClient VNETServer VHVArrayClient

####### Implicit rules

.SUFFIXES: .cpp .cxx .cc .C .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

%.hh : %.idl
	$(IDL) -bcxx  $<

%.cc : %.idl
	$(IDL) -bcxx  $<

####### Build rules


all: $(TARGET)

$(TARGET): $(UICDECLS) $(OBJECTS) $(OBJMOC) 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJMOC) $(LIBS)

moc: $(SRCMOC)

#tmake: Makefile

#Makefile: vhv.pro
#	tmake vhv.pro -o Makefile

dist:
	$(TAR) hvac.tar hvac.pro $(SOURCES) $(HEADERS) $(INTERFACES) $(DIST)
	$(GZIP) hvac.tar

clean:
	-rm -f $(OBJECTS) $(OBJMOC) $(SRCMOC) $(UICIMPLS) $(UICDECLS) $(TARGET)
	-rm -f *~ core*
	-rm -f VNETFunctions.hh VNETFunctionsSK.cc VHVArrayServerSK.cc \
	       VHVArrayServer.hh VNETFunctionsSK.o VHVArrayServerSK.o
	-rm -f src/*~ include/*~ common/*~ tmp/*.o tmp/*.cpp
#	-rm tmp/*.o tmp/moc*

####### Sub-libraries


###### Combined headers


####### Compile

tmp/VHVFrame.o: src/VHVFrame.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHVFrame.o src/VHVFrame.cpp

tmp/VHVControl.o: src/VHVControl.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHVControl.o src/VHVControl.cpp

tmp/VHVData.o: src/VHVData.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHVData.o src/VHVData.cpp

tmp/VStar.o: src/VStar.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VStar.o src/VStar.cpp

tmp/astrometry.o: src/astrometry.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/astrometry.o src/astrometry.cpp

tmp/tclienthandler.o: src/tclienthandler.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/tclienthandler.o src/tclienthandler.cpp

tmp/tdevicedata.o: src/tdevicedata.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/tdevicedata.o src/tdevicedata.cpp

tmp/txmlclient.o: src/txmlclient.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/txmlclient.o src/txmlclient.cpp

tmp/main.o: src/main.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/main.o src/main.cpp

tmp/VASlalib.o: src/VASlalib.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VASlalib.o src/VASlalib.cpp

tmp/VHelpWindow.o: src/VHelpWindow.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHelpWindow.o src/VHelpWindow.cpp

tmp/VNETFunctionsServerThread.o: src/VNETFunctionsServerThread.cpp VNETFunctions.hh
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VNETFunctionsServerThread.o src/VNETFunctionsServerThread.cpp

tmp/VNETFunctionsServer.o: src/VNETFunctionsServer.cpp VNETFunctions.hh 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VNETFunctionsServer.o src/VNETFunctionsServer.cpp

tmp/VHVArrayFunctions.o: src/VHVArrayFunctions.cpp VHVArrayServer.hh 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHVArrayFunctions.o src/VHVArrayFunctions.cpp

tmp/VHVArrayServer.o: src/VHVArrayServer.cpp VHVArrayServer.hh 
	$(CXX) -c $(CXXFLAGS) $(DEFS) $(INCPATH) -o tmp/VHVArrayServer.o src/VHVArrayServer.cpp

tmp/VNETClientThread.o: src/VNETClientThread.cpp VNETFunctions.hh 
	$(CXX) -c $(CXXFLAGS) $(DEFS) $(INCPATH) -o tmp/VNETClientThread.o src/VNETClientThread.cpp

tmp/VHVArrayClient.o: src/VHVArrayClient.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHVArrayClient.o src/VHVArrayClient.cpp

tmp/VReadConfig.o: src/VReadConfig.cpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VReadConfig.o src/VReadConfig.cpp

tmp/VNETFunctionsSK.o: VNETFunctionsSK.cc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VNETFunctionsSK.o VNETFunctionsSK.cc

tmp/VHVArrayServerSK.o: VHVArrayServerSK.cc
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/VHVArrayServerSK.o VHVArrayServerSK.cc

VNETFunctionsSK.cc : common/VNETFunctions.idl
	$(IDL) -bcxx  $<

VHVArrayServerSK.cc : common/VHVArrayServer.idl
	$(IDL) -bcxx  $<

tmp/moc_tdevicedata.o: tmp/moc_tdevicedata.cpp \
		include/tdevicedata.h \
		include/VHVData.h \
		include/VHV.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_tdevicedata.o tmp/moc_tdevicedata.cpp

tmp/moc_txmlclient.o: tmp/moc_txmlclient.cpp \
		include/txmlclient.h \
		include/tclienthandler.h \
		include/tdevicedata.h \
		include/VHVData.h \
		include/VHV.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_txmlclient.o tmp/moc_txmlclient.cpp

tmp/moc_VHVData.o: tmp/moc_VHVData.cpp \
		include/VHVData.h \
		include/VHV.h \
		/usr/local/include/VDB/VDBHighVoltage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_VHVData.o tmp/moc_VHVData.cpp

tmp/moc_VHVControl.o: tmp/moc_VHVControl.cpp \
		include/VHVControl.h \
		include/VHV.h \
		include/VHVData.h \
		include/txmlclient.h \
		include/tclienthandler.h \
		include/tdevicedata.h \
		include/VStar.h \
		include/astrometry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_VHVControl.o tmp/moc_VHVControl.cpp

tmp/moc_VHVFrame.o: tmp/moc_VHVFrame.cpp \
		include/VHVFrame.h \
		include/VHVControl.h \
		include/VHV.h \
		include/VHVData.h \
		include/txmlclient.h \
		include/tclienthandler.h \
		include/tdevicedata.h \
		include/VStar.h \
		include/astrometry.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_VHVFrame.o tmp/moc_VHVFrame.cpp

tmp/moc_VNETFunctionsServerThread.o: tmp/moc_VNETFunctionsServerThread.cpp \
		include/VNETFunctionsServerThread.h \
		include/VNETFunctionsServer.h \
		VNETFunctions.hh \
		include/VHV.h \
		include/VHVData.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_VNETFunctionsServerThread.o tmp/moc_VNETFunctionsServerThread.cpp

tmp/moc_VHVArrayServer.o: tmp/moc_VHVArrayServer.cpp \
		include/exception.h \
		include/Vcorba.h \
		VHVArrayServer.hh \
		include/VHV.h \
		include/VHVData.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_VHVArrayServer.o tmp/moc_VHVArrayServer.cpp

tmp/moc_VNETClientThread.o: tmp/moc_VNETClientThread.cpp \
		include/VNETClientThread.h \
		VNETFunctions.hh \
		include/VHV.h \
		include/VHVData.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o tmp/moc_VNETClientThread.o tmp/moc_VNETClientThread.cpp

tmp/moc_VHelpWindow.cpp: include/VHelpWindow.h
	$(MOC) include/VHelpWindow.h -o tmp/moc_VHelpWindow.cpp

tmp/moc_VHVData.cpp: include/VHVData.h
	$(MOC) include/VHVData.h -o tmp/moc_VHVData.cpp

tmp/moc_VHVControl.cpp: include/VHVControl.h
	$(MOC) include/VHVControl.h -o tmp/moc_VHVControl.cpp

tmp/moc_VHVFrame.cpp: include/VHVFrame.h
	$(MOC) include/VHVFrame.h -o tmp/moc_VHVFrame.cpp

tmp/moc_VNETFunctionsServerThread.cpp: include/VNETFunctionsServerThread.h
	$(MOC) include/VNETFunctionsServerThread.h -o tmp/moc_VNETFunctionsServerThread.cpp

tmp/moc_VHVArrayServer.cpp: include/VHVArrayServer.h
	$(MOC) include/VHVArrayServer.h -o tmp/moc_VHVArrayServer.cpp

tmp/moc_VNETClientThread.cpp: include/VNETClientThread.h
	$(MOC) include/VNETClientThread.h -o tmp/moc_VNETClientThread.cpp

tmp/moc_tdevicedata.cpp: include/tdevicedata.h
	$(MOC) include/tdevicedata.h -o tmp/moc_tdevicedata.cpp

tmp/moc_txmlclient.cpp: include/txmlclient.h
	$(MOC) include/txmlclient.h -o tmp/moc_txmlclient.cpp

VNETClient: VNETFunctions.hh VNETClient.o $(LIBOBJS) $(CORBAOBJS)
	$(LINK) $(LDFLAGS) $(DEFS) -o VNETClient VNETClient.o\
	$(LIBOBJS) $(LIBDIRS) $(LIBS) $(CORBAOBJS) 

VNETServer: VNETFunctions.hh VNETServer.o $(LIBOBJS) $(CORBAOBJS)
	$(LINK) $(LDFLAGS) $(DEFS) -o VNETServer VNETServer.o\
	$(LIBOBJS) $(LIBDIRS) $(LIBS) $(CORBAOBJS) 

VHVArrayClient: VHVArrayServer.hh VHVArrayClient.o lib/Vcorba.o \
	lib/exception.o VHVArrayServerSK.o
	$(LINK) $(LDFLAGS) $(DEFS) -o VHVArrayClient VHVArrayClient.o \
	lib/Vcorba.o lib/exception.o $(LIBDIRS) $(LIBS) VHVArrayServerSK.o
#VHVArrayClient: VHVArrayServer.hh VHVArrayClient.o Vcorba.o exception.o VHVArrayServerSK.o VHVArrayFunctions.o VHVArrayServer.o
#	$(LINK) $(LDFLAGS) $(DEFS) -o VHVArrayClient VHVArrayClient.o \
#	Vcorba.o exception.o $(LIBDIRS) $(LIBS) VHVArrayServerSK.o \
#	VHVArrayFunctions.o VHVArrayServer.o
